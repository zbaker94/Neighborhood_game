<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_npc</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>o_game</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//waiting variables
waitHasBeenSet = false
timetowait = random_range(room_speed, room_speed * 4)
timewehavebeenwaiting = 0

//set image index to 0 and stop animating
sprite_index = 0
image_index = 0
image_speed = 0

//more random instatiations
randomtime = 0
randx = 0
randy = 0
canSeePlayer = false
currentPlayer = noone
//initialize name
name = ""

//initialize objective
objective = "nothing"

//initialize stats array
stats[0] = "null"
stats[1] = "null"
stats[2] = "null"
stats[3] = "null"

//set speed
mySpeed = 3

//initialize home variable
myHome = noone

//initialize state variables
isHome = false
isConversing = false
isMoving = false
isBeingTalkedTo = false
goingHome = false
foundHome = false

//initialize line of sight variables
FOV = 80;
SIGHTMAX = 1000;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
objective = choose("look","go home", "thinking","look") 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//set image angle
image_angle = direction


//check if we are moving
if path_speed &gt; 0{
isMoving = true
}else{
isMoving = false
}     

//check if we are home
if place_meeting(x,y,o_home){
    isHome = true
}else{
    isHome = false
}

//if we have nothing to do, look around.
if objective = "nothing"{
objective = "look"
}
//if we need to look around, and we are not already moving we choose a random spot in our assigned area and go there
if objective = "look"{
    //check if we are near our home
    potentialHome = instance_nearest(x,y,o_home)
    if potentialHome.name = homenum{
     myHome = potentialHome.id
}


//move around in our defined area
if isMoving = false{
switch (homenum)
   {
        case 1:
        randx = random_range(32,1344)
        randy = random_range(32,1152)
      break;
     
         case 2:
       randx = random_range(1312,2976)
         randy = random_range(32,1152)
      break;
       
         case 3:
          randx = random_range(3008,4512)
          randy = random_range(32,1152)
      break;
   
        case 4:
        randx = random_range(4576,6336)
         randy = random_range(32,1152)
      break;
   }
   if place_meeting(randx,randy,o_blocker) = false{
  goTo(randx,randy)
  }
}
}
//if we need to go home, check to see if we are there, if not, check if we have found our home, if not, keep looking, if we have, go there
if objective = "go home"{
    if isHome = false{
        if myHome = noone{
            objective = "look"
        }else{
            goTo(myHome.x,myHome.y)
        }
    }else{
        objective = "thinking"
    } 

}

//thinking is the in between state for everything else and waiting
if objective = "thinking"{
    alarm[0] = random_range(room_speed, room_speed * 4)
    objective = "waiting"
}

//if we can see the player change our image index
if canSee(instance_nearest(x,y,o_player)){
image_index = 1
canSeePlayer = true
}else{
image_index = 0
canSeePlayer = false
}








 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path_speed = 0
objective = "waiting"
alarm[0] = random_range(room_speed, room_speed * 4)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//assign random personality
j = irandom(array_length_1d(global.personalities)-1)

personality = global.personalities[j]

//assign random home. 

//Choose a home number. if it is taken, choose a new one
k = irandom(global.numberOfHomes-1) 
while global.homes_taken[k] = 1{
k = irandom(global.numberOfHomes-1) 
}

//otherwise claim that home
global.homes_taken[k] = 1 
homenum = k+1 

//figure out name
rand1 = irandom(array_length_1d(global.fname)-1)
rand2 = irandom(array_length_1d(global.lname)-1)

name = global.fname[rand1] + global.lname[rand2]

//if we're lazy, decrease our overall speed
if personality = "lazy"{
mySpeed -= 2
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
